"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[444],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||r;return n?i.createElement(k,o(o({ref:t},u),{},{components:n})):i.createElement(k,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5293:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=n(7462),a=(n(7294),n(3905));const r={title:"Linking",sidebar_position:2},o=void 0,l={unversionedId:"features/linking",id:"features/linking",title:"Linking",description:"The expo-router Link component supports client-side navigation to a route. It is similar to the Link component in react-router-dom and next/link.",source:"@site/docs/features/linking.md",sourceDirName:"features",slug:"/features/linking",permalink:"/router/docs/features/linking",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/features/linking.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Linking",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Routes",permalink:"/router/docs/features/routes"},next:{title:"Layout Routes",permalink:"/router/docs/features/layout-routes"}},p={},s=[{value:"Imperative API",id:"imperative-api",level:2},{value:"<code>useLink</code> API",id:"uselink-api",level:2},{value:"<code>Href</code> type",id:"href-type",level:2},{value:"Navigation prop",id:"navigation-prop",level:2},{value:"Testing",id:"testing",level:2},{value:"Dev mode",id:"dev-mode",level:2}],u={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"expo-router")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," component supports client-side navigation to a route. It is similar to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," component in ",(0,a.kt)("inlineCode",{parentName:"p"},"react-router-dom")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"next/link"),"."),(0,a.kt)("p",null,"When JavaScript is disabled or the client is offline, the ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," component will render a regular ",(0,a.kt)("inlineCode",{parentName:"p"},"<a>")," element. Otherwise, the default behavior will be intercepted and the client-side router will navigate to the route (faster and smoother)."),(0,a.kt)("p",null,"Meaning you get the best of both worlds: a fast client-side navigation experience, and a fallback for when JavaScript is disabled or hasn't loaded yet."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Link } from "expo-router";\n\nexport default function Page() {\n  return (\n    <View>\n      <Link href="/">Home</Link>\n    </View>\n  );\n}\n')),(0,a.kt)("p",null,"Try to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," component whenever possible as it renders the correct semantic HTML element on web. This is important for accessibility and SEO."),(0,a.kt)("h2",{id:"imperative-api"},"Imperative API"),(0,a.kt)("p",null,"For more advanced use cases, you can use the imperative ",(0,a.kt)("inlineCode",{parentName:"p"},"useLink")," hook to navigate imperatively."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { View, Text } from "react-native";\nimport { useLink } from "expo-router";\n\nexport default function Page() {\n  const link = useLink();\n\n  return (\n    <View>\n      <Text onPress={() => link.push("/profile/settings")}>Settings</Text>\n    </View>\n  );\n}\n')),(0,a.kt)("p",null,"Prefer the ",(0,a.kt)("inlineCode",{parentName:"p"},"useLink")," hook to ",(0,a.kt)("inlineCode",{parentName:"p"},"useNavigation")," from React Navigation as ",(0,a.kt)("inlineCode",{parentName:"p"},"useLink")," works much closer to the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Link />")," component."),(0,a.kt)("h2",{id:"uselink-api"},(0,a.kt)("inlineCode",{parentName:"h2"},"useLink")," API"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"push"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"em"},"(href: Href) => void"))," Navigate to a route. You can provide a full path like ",(0,a.kt)("inlineCode",{parentName:"li"},"/profile/settings")," or a relative path like ",(0,a.kt)("inlineCode",{parentName:"li"},"../settings"),". Navigate to dynamic routes by passing an object like ",(0,a.kt)("inlineCode",{parentName:"li"},"{ pathname: 'profile', query: { id: '123' } }"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"replace"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"em"},"(href: Href) => void"))," Same API as ",(0,a.kt)("inlineCode",{parentName:"li"},"push")," but replaces the current route in the history instead of pushing a new one. This is useful for redirects."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"back"),": ",(0,a.kt)("em",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"em"},"() => void"))," Navigate to a route. You can provide a full path like ",(0,a.kt)("inlineCode",{parentName:"li"},"/profile/settings")," or a relative path like ",(0,a.kt)("inlineCode",{parentName:"li"},"../settings"),". Navigate to dynamic routes by passing an object like ",(0,a.kt)("inlineCode",{parentName:"li"},"{ pathname: 'profile', query: { id: '123' } }"),".")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This API is similar to Next.js's ",(0,a.kt)("inlineCode",{parentName:"p"},"useRouter")," hook, but adjusted to work around the state management requirements of native.")),(0,a.kt)("h2",{id:"href-type"},(0,a.kt)("inlineCode",{parentName:"h2"},"Href")," type"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Href")," type is a union of the following types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"string"),": A full path like ",(0,a.kt)("inlineCode",{parentName:"li"},"/profile/settings")," or a relative path like ",(0,a.kt)("inlineCode",{parentName:"li"},"../settings"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"object"),": An object with a ",(0,a.kt)("inlineCode",{parentName:"li"},"pathname")," and optional ",(0,a.kt)("inlineCode",{parentName:"li"},"query")," object. The ",(0,a.kt)("inlineCode",{parentName:"li"},"pathname")," can be a full path like ",(0,a.kt)("inlineCode",{parentName:"li"},"/profile/settings")," or a relative path like ",(0,a.kt)("inlineCode",{parentName:"li"},"../settings"),". The ",(0,a.kt)("inlineCode",{parentName:"li"},"query")," can be an object of key/value pairs.")),(0,a.kt)("h2",{id:"navigation-prop"},"Navigation prop"),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/navigation-prop"},(0,a.kt)("inlineCode",{parentName:"a"},"navigation")," object")," from React Navigation to imperatively navigate using screen names:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"export default function Route({ navigation }) {\n  return (\n    <View>\n      <Text\n        onPress={() => {\n          // Go back to the previous screen using the imperative API.\n          navigation.goBack();\n        }}\n      >\n        Details Screen\n      </Text>\n    </View>\n  );\n}\n")),(0,a.kt)("p",null,"Alternatively, you can access the ",(0,a.kt)("inlineCode",{parentName:"p"},"navigation")," prop from any component using the hook:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { useNavigation } from "@react-navigation/native";\n\nfunction MyBackButton() {\n  const navigation = useNavigation();\n\n  return <Button title="Go back" onPress={() => navigation.goBack()} />;\n}\n')),(0,a.kt)("p",null,"The navigation prop is useful for layout-specific functionality like ",(0,a.kt)("inlineCode",{parentName:"p"},"navigation.openDrawer()")," in a Drawer layout. ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/navigation-prop#navigator-dependent-functions"},"Learn more"),"."),(0,a.kt)("h2",{id:"testing"},"Testing"),(0,a.kt)("p",null,"On native, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"uri-scheme")," CLI to test opening native links on a device."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx uri-scheme open exp://192.168.87.39:19000/--/form-sheet --ios\n")),(0,a.kt)("p",null,"You can also search for links directly in a browser like Safari or Chrome to test deep linking on physical devices. Learn more about ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/deep-linking"},"testing deep links"),"."),(0,a.kt)("h2",{id:"dev-mode"},"Dev mode"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(2826).Z,width:"1920",height:"1080"})),(0,a.kt)("p",null,"We currently inject a ",(0,a.kt)("inlineCode",{parentName:"p"},"/__index")," file which provides a list of all routes in the app. This is useful for debugging and development. This screen is only injected during development, and won't be available in production."),(0,a.kt)("p",null,"We may remove this feature for the official release, but it's useful for now."))}c.isMDXComponent=!0},2826:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/directory-d6318463da62250df9c154474cc8ab12.png"}}]);