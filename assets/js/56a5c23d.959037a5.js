"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={title:"Layout Routes",sidebar_position:3},i=void 0,s={unversionedId:"features/layout-routes",id:"features/layout-routes",title:"Layout Routes",description:"Expo Router is in the earliest stage of development. The API is subject to breaking changes. The documentation is incomplete and may be inaccurate. The project is not yet ready for production use. Please contribute to the discussion if you have any ideas or suggestions on how we can improve the convention.",source:"@site/docs/features/layout-routes.md",sourceDirName:"features",slug:"/features/layout-routes",permalink:"/router/docs/features/layout-routes",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Layout Routes",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Linking",permalink:"/router/docs/features/linking"},next:{title:"Layouts",permalink:"/router/docs/features/layouts"}},l={},u=[{value:"Fragment Routes",id:"fragment-routes",level:2}],p={toc:u};function c(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Beta Release",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Expo Router is in the earliest stage of development. The API is subject to breaking changes. The documentation is incomplete and may be inaccurate. The project is not yet ready for production use. Please ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/expo/router/discussions/1"},"contribute to the discussion")," if you have any ideas or suggestions on how we can improve the convention.")),(0,r.kt)("p",null,"To render shared navigation elements like a header, tab bar, or drawer, you can use a ",(0,r.kt)("strong",{parentName:"p"},"layout route"),".\nIf a ",(0,r.kt)("strong",{parentName:"p"},"route")," has a sibling directory by the same name, it will be used as the layout component for all the files in the respective directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n# highlight-next-line\n  stack.js # Layout route. This is where a header bar would go\n  # highlight-next-line\n  stack/ # Children of stack.js\n    home.js # A child route of stack.js\n")),(0,r.kt)("p",null,"If a nested route does not have a layout route then a virtual, unstyled navigator will be generated in-memory to accommodate the child route:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  stack/ # Unpaired layout route\n    home.js # Child route of a virtual navigator\n\n# highlight-next-line\n  stack.tsx # This file exists in-memory to render the `stack/home.js` route. Creating this file will override the in-memory route.\n")),(0,r.kt)("p",null,"The virtual route system exists to accommodate native navigation which requires a parent navigator to render a child route."),(0,r.kt)("iframe",{src:"https://universal-routing.netlify.app/",style:{width:"100%",height:500,border:0,borderRadius:4,overflow:"hidden"},title:"expo-router",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"}),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Interoperability"),(0,r.kt)("p",null,"Nested routes are used to implement nested navigation in ",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/nesting-navigators"},"React Navigation"),"."),(0,r.kt)("p",null,"This convention is analogous to ",(0,r.kt)("a",{parentName:"p",href:"https://remix.run/docs/en/v1/guides/routing#what-is-nested-routing"},"nested routing")," (same format) in Remix.\nLayout routes are also similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/_app.js")," in Next.js.")),(0,r.kt)("h2",{id:"fragment-routes"},"Fragment Routes"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(153).Z,width:"2332",height:"1500"})),(0,r.kt)("p",null,"Fragment routes add nested layout without appending any path segments. Think of them like ",(0,r.kt)("inlineCode",{parentName:"p"},"index.js")," but as a layout. These are most commonly used for adding navigators like tab, stack, drawer, etc... The format is ",(0,r.kt)("inlineCode",{parentName:"p"},"(name).js")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/(name)"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," is purely cosmetic and not provided to the route component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  layout.js # Layout route\n  layout/\n    home.js # \ud835\udf60.com/layout/home\n\napp/\n# highlight-next-line\n  (layout).js # Fragment route\n  # highlight-next-line\n  (layout)/\n    home.js # \ud835\udf60.com/home\n")),(0,r.kt)("p",null,"Both of these will render:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<App>\n  <Layout>\n    <Home />\n  </Layout>\n</App>\n")),(0,r.kt)("p",null,"Be careful when using parallel fragment routes as they can create conflicting matches. For example, the following routes will conflict:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n# highlight-next-line\n  profile.js # Matches /profile\n  (layout).js\n  (layout)/\n  # highlight-next-line\n    profile.js # Matches /profile (conflict)\n")),(0,r.kt)("p",null,"Expo Router will assert when there are route collisions."),(0,r.kt)("p",null,"The name 'Fragment' route is a nod to ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/fragments.html"},"React Fragments")," (",(0,r.kt)("inlineCode",{parentName:"p"},"<>{...}</>"),") which wrap components without adding any additional views to the hierarchy."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Previous iteration"),(0,r.kt)("p",null,"We originally considered using ",(0,r.kt)("inlineCode",{parentName:"p"},"index/")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"(index)/")," since the leaf variation is automatically collapsed. This was rejected because ",(0,r.kt)("inlineCode",{parentName:"p"},"/index/index")," was not a valid path for fragments but it was for leaf routes. Theoretically we should also be able to support multiple fragments in a single directory for swapping parent layouts.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Interoperability"),(0,r.kt)("p",null,"The Fragment convention is similar to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Groups in ",(0,r.kt)("a",{parentName:"li",href:"https://kit.svelte.dev/docs/advanced-routing#advanced-layouts-group"},"SvelteKit")," (",(0,r.kt)("inlineCode",{parentName:"li"},"(group)"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://remix.run/docs/en/v1/guides/routing#pathless-layout-routes"},"pathless layout routes")," in Remix (",(0,r.kt)("inlineCode",{parentName:"li"},"__group"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nextjs.org/blog/layouts-rfc#route-groups"},"Route Groups")," in the upcoming Next.js layouts RFC (",(0,r.kt)("inlineCode",{parentName:"li"},"(group)"),")."))))}c.isMDXComponent=!0},153:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/fragment-routes-e9cba4a4305463fa0f97b831d01a2366.png"}}]);