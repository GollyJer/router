"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[992],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,g=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return r?n.createElement(g,s(s({ref:t},u),{},{components:r})):n.createElement(g,s({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4140:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={title:"Passing parameters to the routes",sidebar_position:4},s=void 0,i={unversionedId:"guides/params",id:"guides/params",title:"Passing parameters to the routes",description:"Ports the guide React Navigation: Params to Expo Router.",source:"@site/docs/guides/params.md",sourceDirName:"guides",slug:"/guides/params",permalink:"/router/docs/guides/params",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/guides/params.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Passing parameters to the routes",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Moving between screens",permalink:"/router/docs/guides/navigating"},next:{title:"Configuring the header bar",permalink:"/router/docs/guides/headers"}},p={},l=[{value:"Notes",id:"notes",level:2}],u={toc:l};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Ports the guide ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/params"},"React Navigation: Params")," to Expo Router."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js\n  index.js\n  details.js\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { Stack } from "expo-router";\n\nexport default function Layout() {\n  return <Stack />;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/index.js",title:"app/index.js"},'import { useEffect } from "react";\nimport { View, Text } from "react-native";\n\nexport default function Home({ navigation, route }) {\n  useEffect(() => {\n    if (route.params?.post) {\n      // Post updated, do something with `route.params.post`\n      // For example, send the post to the server\n    }\n  }, [route.params?.post]);\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text>Home Screen</Text>\n      <Link\n        href={{\n          pathname: "details",\n          // /* 1. Navigate to the details route with query params */\n          query: { itemId: 86, otherParam: "anything you want here" },\n        }}\n      >\n        Go to Details\n      </Link>\n    </View>\n  );\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/details.js",title:"app/details.js"},'import { View, Text } from "react-native";\n\nexport default function Details({ navigation, route }) {\n  const {\n    // NOTE(EvanBacon): Prefer default value to initialParams -- https://reactnavigation.org/docs/params#initial-params\n    itemId = 42,\n    otherParam,\n  } = route.params;\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text\n        onPress={() => {\n          // https://reactnavigation.org/docs/params#updating-params\n          navigation.setParams({\n            query: "someText",\n          });\n\n          // https://reactnavigation.org/docs/params#passing-params-to-a-previous-screen\n          // Pass and merge params back to home screen\n          navigation.navigate({\n            name: "home",\n            params: { post: "random text" },\n            merge: true,\n          });\n        }}\n      >\n        Details Screen\n      </Text>\n    </View>\n  );\n}\n')),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prefer static route support (ex: ",(0,a.kt)("inlineCode",{parentName:"li"},'href="/foo/bar?some=data"'),") to ",(0,a.kt)("a",{parentName:"li",href:"https://reactnavigation.org/docs/params#passing-params-to-nested-navigators"},"passing-params-to-nested-navigators")),(0,a.kt)("li",{parentName:"ul"},"Only serialized top level params are supported ",(0,a.kt)("a",{parentName:"li",href:"https://reactnavigation.org/docs/params#what-should-be-in-params"},"https://reactnavigation.org/docs/params#what-should-be-in-params"))))}c.isMDXComponent=!0}}]);