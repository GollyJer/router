"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[422],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Dynamic Routes",sidebar_position:5},o=void 0,l={unversionedId:"features/dynamic-routes",id:"features/dynamic-routes",title:"Dynamic Routes",description:"Expo Router is in the earliest stage of development. The API is subject to breaking changes. The documentation is incomplete and may be inaccurate. The project is not yet ready for production use. Please contribute to the discussion if you have any ideas or suggestions on how we can improve the convention.",source:"@site/docs/features/dynamic-routes.md",sourceDirName:"features",slug:"/features/dynamic-routes",permalink:"/router/docs/features/dynamic-routes",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Dynamic Routes",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Layouts",permalink:"/router/docs/features/layouts"},next:{title:"Screen Options",permalink:"/router/docs/features/options"}},s={},p=[{value:"Deep Dynamic Routes",id:"deep-dynamic-routes",level:2},{value:"Priority",id:"priority",level:2}],c={toc:p};function m(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Beta Release",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Expo Router is in the earliest stage of development. The API is subject to breaking changes. The documentation is incomplete and may be inaccurate. The project is not yet ready for production use. Please ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/expo/router/discussions/1"},"contribute to the discussion")," if you have any ideas or suggestions on how we can improve the convention.")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(3293).Z,width:"2290",height:"844"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  blog/\n    # highlight-next-line\n    [id].js # Matches: \ud835\udf60.com/blog/123\n")),(0,r.kt)("p",null,"Dynamic routes match any unmatched path at a given segment level. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/[id]")," is a dynamic route. The variable part (",(0,r.kt)("inlineCode",{parentName:"p"},"[id]"),') is called a "slug". Routes with higher specificity will be matched before a dynamic route. For example, ',(0,r.kt)("inlineCode",{parentName:"p"},"/blog/bacon")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"blog/bacon.js")," before ",(0,r.kt)("inlineCode",{parentName:"p"},"blog/[id].js"),"."),(0,r.kt)("p",null,"The slug can be accessed from the ",(0,r.kt)("inlineCode",{parentName:"p"},"route.params.[name]")," prop in the component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=app/blog/[id].js",title:"app/blog/[id].js"},"export default function BlogPost({ route }) {\n  return (\n    <Text>\n      // highlight-next-line\n      {route.params.id}\n    </Text>\n  );\n}\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Interoperability"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"By ",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/Baconbrix/status/1567538444246589441"},"popular demand"),", the dynamic routes pattern is based on the ",(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/routing/dynamic-routes"},"Next.js dynamic routes")," system.")),(0,r.kt)("p",null,"There are a couple different ways to implement dynamic routes, here are some existing formats:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Format"),(0,r.kt)("th",{parentName:"tr",align:null},"Framework"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/blog/[id].js")),(0,r.kt)("td",{parentName:"tr",align:null},"Next.js")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/blog/[id].svelte")),(0,r.kt)("td",{parentName:"tr",align:null},"SvelteKit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/blog/$id.js")),(0,r.kt)("td",{parentName:"tr",align:null},"Remix")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Related")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://remix.run/docs/en/v1/routing/file-system-routing"},"Remix")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://reactrouter.com/web/guides/quick-start"},(0,r.kt)("inlineCode",{parentName:"a"},"react-router"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nextjs.org/blog/layouts-rfc"},"Next.js layouts RFC, pt. 1")))),(0,r.kt)("h2",{id:"deep-dynamic-routes"},"Deep Dynamic Routes"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(9347).Z,width:"2382",height:"836"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  blog/\n    # highlight-next-line\n    [...id].js # Matches: \ud835\udf60.com/blog/123/456\n")),(0,r.kt)("p",null,"Similar to dynamic routes, but the slug matches any number of unmatched path components in a route. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/[...id]")," is a deep dynamic route where ",(0,r.kt)("inlineCode",{parentName:"p"},"[...id]")," is the slug. ",(0,r.kt)("inlineCode",{parentName:"p"},"blog/[...ids].js")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/1/2/3"),"."),(0,r.kt)("admonition",{title:"Pending research",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"This convention is subject to breaking changes.")),(0,r.kt)("p",null,"Directory names can also be deep dynamic routes. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/[...id]/home.js")," will match ",(0,r.kt)("inlineCode",{parentName:"p"},"/blog/1/2/3/home"),"."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Interoperability"),(0,r.kt)("p",null,"Deep dynamic routes are functionally analogous to the 'optional catch-all dynamic routes' (",(0,r.kt)("inlineCode",{parentName:"p"},"[[...id]].js"),") feature from Next.js but the syntax is the same as the 'required catch-all dynamic routes'. Unlike Next.js which has a separate syntax for matching everything except ",(0,r.kt)("inlineCode",{parentName:"p"},"/"),", Expo uses the same syntax for both. If you want to match everything except index, you can add an ",(0,r.kt)("inlineCode",{parentName:"p"},"index.js")," file that has custom handling or you could simply handle the slug differently. We also reserve the term ",(0,r.kt)("strong",{parentName:"p"},"catch")," for error handling."),(0,r.kt)("p",null,"The convention is also similar to splats in Remix.")),(0,r.kt)("h2",{id:"priority"},"Priority"),(0,r.kt)("p",null,"Routes with the highest specificity will be matched first. For example a ",(0,r.kt)("strong",{parentName:"p"},"deep dynamic route")," is less specific than a ",(0,r.kt)("strong",{parentName:"p"},"dynamic route"),", which is less specific than a named ",(0,r.kt)("strong",{parentName:"p"},"route"),". The following routes will match in the following order:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  blog/\n    index.js # Matches: \ud835\udf60.com/blog/\n    hello.js # Matches: \ud835\udf60.com/blog/hello\n    [dynamic].js # Matches: \ud835\udf60.com/blog/123\n    [...deep].js # Matches: \ud835\udf60.com/blog/123/456\n")),(0,r.kt)("admonition",{title:"Beta Release",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Nested priority may contain bugs. Please report broken configurations to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/expo/router/issues"},"expo/router")," repo.")))}m.isMDXComponent=!0},9347:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/deep-dynamic-roots-41ad5ed4739e438b5581e4eccc5cf4ac.png"},3293:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/dynamic-routes-2a6e3f369ddac37a9c38c7a4d5d63cf0.png"}}]);